name: Build Check and Publish

on:
  workflow_dispatch:
  push:
    branches:
      - "1.17"
    tags:
      - "!*"
    paths:
      - "src/main/**"
      - "forge_version.properties"
      - ".github/workflows/gradle.yml"

jobs:
  assemble:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/kotori316/fictional-meme/fictional-meme:1.17.1
      credentials:
        username: kotori316
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Check Warning
        run: chmod +x ./gradlew && ./gradlew javaToolchains --info --no-daemon --warning-mode all
      - name: Compile
        run: chmod +x ./gradlew && ./gradlew assemble --info --no-daemon
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
      - name: Publish
        uses: actions/upload-artifact@v2
        with:
          path: build/libs/*
          name: ${{ github.event.repository.name }}-${{ github.run_number }}

  cross-check-runData:
    runs-on: ubuntu-latest
    needs: [ assemble ]
    if: false
    container:
      image: ghcr.io/kotori316/fictional-meme/fictional-meme:1.17.1
      credentials:
        username: kotori316
        password: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        java: [ default ]
        forge: [ 1.17.1-latest, default ]
    steps:
      - name: Set versions
        if: ${{ matrix.forge != 'default' }}
        run: |
          mv /work/* ./ && ls -al
          version=$(java -jar $(find / -maxdepth 1 -name "*.jar") ${{ matrix.forge }})
          sed -i -e "s/forge.version=latest/forge.version=$version/" -e "s/ci.mods=dummy/ci.mods=quarryplus/" gradle.properties
          cat gradle.properties
      - name: Checkout QuarryPlus repo
        uses: actions/checkout@v2
        if: ${{ matrix.forge == 'default' }}
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        if: ${{ matrix.java != 'default' }}
        with:
          java-version: ${{ matrix.java }}
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{needs.assemble.outputs.key}}
          restore-keys: |
            ${{ runner.os }}-gradle16
      - name: Download Mod Jar
        if: ${{ matrix.forge != 'default' }}
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.event.repository.name }}-${{ github.run_number }}
          path: work/
      - name: move files
        if: ${{ matrix.forge != 'default' }}
        run: ls -al work && mkdir --parents run/mods && mv work/*-deobf.jar run/mods/ && ls -al run/mods
      - name: download_assets
        run: chmod +x ./gradlew && (./gradlew clean downloadAssets || true)
        continue-on-error: true
      - name: Test with runData
        run: chmod +x ./gradlew && ( ./gradlew --no-daemon runData || ./gradlew --no-daemon runData)
      - id: check-test-started
        run: |
          [ -f test_started.txt ]
      - id: check-error
        run: |
          ! [ -f error-trace.txt ]
      - id: show-failure-log
        if: failure()
        run: cat error-trace.txt

  cross-check-JUnit:
    runs-on: ubuntu-latest
    needs: [ assemble ]
    container:
      image: ghcr.io/kotori316/fictional-meme/fictional-meme:1.17.1
      credentials:
        username: kotori316
        password: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        java: [ default ]
        forge: [ 1.17.1-latest, default ]
    steps:
      - name: Get latest version
        if: ${{ matrix.forge != 'default' }}
        run: echo "CI_FORGE=$(java -jar $(find / -maxdepth 1 -name "*.jar") ${{ matrix.forge }})" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        if: ${{ matrix.java != 'default' }}
        with:
          java-version: ${{ matrix.java }}
      - name: compile
        run: |
          chmod +x ./gradlew && (./gradlew clean || true)
          ( (./gradlew compileScala || ./gradlew clean) || (./gradlew compileScala || ./gradlew clean) || (sleep 10s && ./gradlew compileScala) )
        continue-on-error: true
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Test with JUnit
        run: chmod +x ./gradlew && ./gradlew --no-daemon javaToolchains test --info
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload failed test report
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: build/reports/tests/*
          name: Test-Report-${{ matrix.java }}
