name: Build Check and Publish

on:
  workflow_dispatch:
  push:
    branches:
      - "1.19"
    tags:
      - "!*"
    paths:
      - "src/main/**"
      - "src/test/**"
      - "gradle.properties"
      - "build.gradle"
      - ".github/workflows/gradle.yml"
  pull_request:
    branches:
      - "1.19"

jobs:
  assemble:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    container:
      image: ghcr.io/kotori316/fictional-meme/fictional-meme:1.19
      credentials:
        username: kotori316
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Check Warning
        run: chmod +x ./gradlew && ./gradlew javaToolchains --no-daemon --warning-mode all
      - name: Compile
        run: chmod +x ./gradlew && ./gradlew assemble --no-daemon
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
      - name: Publish
        uses: actions/upload-artifact@v2
        with:
          path: build/libs/*
          name: ${{ github.event.repository.name }}-${{ github.run_number }}

  cross-check-runData:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/kotori316/fictional-meme/fictional-meme:1.19
      credentials:
        username: kotori316
        password: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        forge: [ 1.19, default ]
    steps:
      - name: Checkout QuarryPlus repo
        uses: actions/checkout@v2
      - name: Set versions
        if: ${{ matrix.forge != 'default' }}
        run: |
          version=$(java -jar $(find / -maxdepth 1 -name "fictional*.jar") ${{ matrix.forge }})
          echo "CI_FORGE=${version}" >> $GITHUB_ENV
          grep ${version} gradle.properties > /dev/null && echo "SAME_DEFAULT=true" >> $GITHUB_ENV || echo "SAME_DEFAULT=false" >> $GITHUB_ENV
          echo ${version}
      - name: Test with runData
        if: ${{ env.SAME_DEFAULT != 'true' }}
        run: chmod +x ./gradlew && ./gradlew --no-daemon runData

  cross-check-JUnit:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/kotori316/fictional-meme/fictional-meme:1.19
      credentials:
        username: kotori316
        password: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        forge: [ 1.19, default ]
    steps:
      - uses: actions/checkout@v2
      - name: Get latest version
        if: ${{ matrix.forge != 'default' }}
        run: |
          version=$(java -jar $(find / -maxdepth 1 -name "fictional*.jar") ${{ matrix.forge }})
          echo "CI_FORGE=${version}" >> $GITHUB_ENV
          grep ${version} gradle.properties > /dev/null && echo "SAME_DEFAULT=true" >> $GITHUB_ENV || echo "SAME_DEFAULT=false" >> $GITHUB_ENV
          echo ${version}
      - name: Test with JUnit
        if: ${{ env.SAME_DEFAULT != 'true' }}
        run: chmod +x ./gradlew && ./gradlew --no-daemon test
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload failed test report
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: build/reports/tests/*
          name: Test-Report-${{ github.run_number }}-${{ matrix.forge }}

  check-game-test:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/kotori316/fictional-meme/fictional-meme:1.19
      credentials:
        username: kotori316
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout QuarryPlus repo
        uses: actions/checkout@v2
      - name: Set forge version
        run: echo "CI_FORGE=$(cat /forge.txt)" >> $GITHUB_ENV
      - name: GameTest
        run: chmod +x ./gradlew && ./gradlew --no-daemon copyGameTestTemplate runGameTestServer
      - name: Check report
        run: |
          ! test -d "build/game_test/crash-reports"
