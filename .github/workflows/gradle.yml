name: Build Check and Publish

on:
  workflow_dispatch:
  push:
    branches:
      - "1.19"
    tags:
      - "!*"
    paths:
      - "src/main/**"
      - "src/test/**"
      - "gradle.properties"
      - "build.gradle"
      - ".github/workflows/gradle.yml"
  pull_request:
    branches:
      - "1.19"

jobs:
  cross-check-JUnit:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/kotori316/fictional-meme/fictional-meme:1.19.3
      credentials:
        username: kotori316
        password: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        forge: [ 1.19.4, default ]
    steps:
      - uses: actions/checkout@v3
      - name: Get latest version
        if: ${{ matrix.forge != 'default' && github.event_name != 'pull_request' }}
        run: |
          version=$(java -jar $(find / -maxdepth 1 -name "fictional*.jar") ${{ matrix.forge }})
          echo "CI_FORGE=${version}" >> $GITHUB_ENV
          grep -q ${version} gradle.properties && echo "SAME_DEFAULT=true" >> $GITHUB_ENV || echo "SAME_DEFAULT=false" >> $GITHUB_ENV
          echo ${version}
      - name: Compile
        if: ${{ env.SAME_DEFAULT != 'true' }}
        run: chmod +x ./gradlew && ./gradlew assemble --no-daemon
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
      - name: Test with JUnit
        if: ${{ env.SAME_DEFAULT != 'true' && (matrix.forge == 'default' || github.event_name != 'pull_request') }}
        run: chmod +x ./gradlew && ./gradlew --no-daemon test runGameTestServer runData
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TEST_UTILITY_LOG_ALL_TEST: true
      - name: Check report
        run: |
          ! test -d "game-test/crash-reports"
      - name: Upload failed test report
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          path: build/reports/tests/*
          name: Test-Report-${{ github.run_number }}-${{ matrix.forge }}
