name: Build Check and Publish

on:
  workflow_dispatch:
  push:
    branches:
      - "1.21"
    tags:
      - "!*"
  pull_request:
    branches:
      - "1.21"

jobs:
  assemble:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/actions/wrapper-validation@v3
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - run: chmod +x ./gradlew
      - uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: ${{ github.event_name != 'push' }}
          add-job-summary: 'on-failure'
      - run: ./gradlew assemble --scan
      - run: ./gradlew data checkReleaseVersion --no-parallel

  platforms:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [ common, fabric ]
    env:
      DISABLE_FORGE: ${{ matrix.platform != 'forge' }}
      DISABLE_FABRIC: ${{ matrix.platform != 'fabric' }}
      DISABLE_NEOFORGE: ${{ matrix.platform != 'neoforge' }}
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/actions/wrapper-validation@v3
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: ${{ github.event_name != 'push' }}
          gradle-home-cache-cleanup: true
          add-job-summary: 'on-failure'
      - name: Compile main ${{ matrix.platform }}
        run: ./gradlew :${{ matrix.platform }}:classes
      - name: Compile test ${{ matrix.platform }}
        run: ./gradlew :${{ matrix.platform }}:testClasses
      - name: Get run resources
        if: matrix.platform != 'neoforge' && matrix.platform != 'common'
        run: |
          (./gradlew downloadAssets) || \
            (sleep 5 && ./gradlew downloadAssets) || \
            (sleep 5 && ./gradlew downloadAssets) || true
      - name: JUnit ${{ matrix.platform }}
        run: ./gradlew :${{ matrix.platform }}:test
        env:
          TEST_UTILITY_LOG_ALL_TEST: true
          IGNORE_OTHER_MODS_IN_RUNTIME: true
      - name: Data ${{ matrix.platform }}
        if: false
        run: ./gradlew :${{ matrix.platform }}:runData
        env:
          TEST_UTILITY_LOG_ALL_DATA: true
          IGNORE_OTHER_MODS_IN_RUNTIME: true
          RUN_DATA: true
      - name: Check updated files
        run: git diff --exit-code
      - name: GameTest ${{ matrix.platform }}
        if: false
        run: ./gradlew :${{ matrix.platform }}:runGameTestServer
        env:
          TEST_UTILITY_LOG_ALL_TEST: true
          IGNORE_OTHER_MODS_IN_RUNTIME: true
          RUN_GAME_TEST: true
      - name: Check report
        run: |
          ! test -d "${{ matrix.platform }}/game-test/crash-reports"
      - name: Upload failed test report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          path: |
            ${{ matrix.platform }}/build/reports/tests/*
            ${{ matrix.platform }}/game-test/crash-reports/*
          name: Test-Report-${{ github.run_number }}-QuarryPlus-${{ matrix.platform }}

  merge-checker:
    if: always()
    needs:
      - assemble
      - platforms
    uses: 'Kotori316/common-script/.github/workflows/merge-checker.yaml@main'
    with:
      needs: ${{ toJSON(needs) }}
