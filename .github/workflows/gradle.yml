name: Build Check and Publish

on:
  push:
    branches:
      - "1.16"
    tags:
      - "!*"

jobs:
  assemble:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle16-${{ hashFiles('**/forge_version.properties') }}
      - name: Download Assets for Cache
        run: |
          chmod +x ./gradlew && (./gradlew clean || true)
          ( ./gradlew downloadAssets extractNatives || ./gradlew downloadAssets extractNatives || \
          (sleep 30s && ./gradlew downloadAssets extractNatives) || true)
      - name: Compile
        run: chmod +x ./gradlew && ./gradlew assemble --warning-mode all --no-daemon
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
      - name: Publish
        uses: actions/upload-artifact@v2
        with:
          path: build/libs/*
          name: ${{ github.event.repository.name }}-${{ github.run_number }}

  cross-check-runData:
    runs-on: ubuntu-latest
    needs: [ assemble ]
    strategy:
      fail-fast: false
      matrix:
        # test against latest update of each major Java version, as well as specific updates of LTS versions:
        java: [ default, 11 ]
        forge: [ 1.16.4-35.1.4, 1.16.4-35.1.37, latest, default ]
    steps:
      - name: Checkout SLP-example repo
        uses: actions/checkout@v2
        if: ${{ matrix.forge != 'default' }}
        with:
          repository: "Kotori316/SLP-example"
      - name: Checkout QuarryPlus repo
        uses: actions/checkout@v2
        if: ${{ matrix.forge == 'default' }}
      - name: Get latest version
        if: ${{ matrix.forge == 'latest' }}
        run: |
          version=$(python3 get_latest_forge.py "1.16.5-latest")
          echo "FORGE_LATEST=1.16.5-$version" >> $GITHUB_ENV
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        if: ${{ matrix.java != 'default' }}
        with:
          java-version: ${{ matrix.java }}
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle16
      - name: Download Mod Jar
        if: ${{ matrix.forge != 'default' }}
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.event.repository.name }}-${{ github.run_number }}
          path: work/
      - name: move files
        if: ${{ matrix.forge != 'default' }}
        run: ls -al work && mkdir --parents run/mods && mv work/*-deobf.jar run/mods/ && ls -al run/mods
      - name: download_assets
        run: |
          if [ $CI_FORGE = "latest" ]; then
            export CI_FORGE=$FORGE_LATEST
          fi
          chmod +x ./gradlew && (./gradlew clean downloadAssets || true)
        continue-on-error: true
        env:
          CI_FORGE: ${{ matrix.forge }}
      - name: Test with runData
        run: |
          if [ $CI_FORGE = "latest" ]; then
            export CI_FORGE=$FORGE_LATEST
          fi
          chmod +x ./gradlew && ( ./gradlew --no-daemon runData || ./gradlew --no-daemon runData)
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI_FORGE: ${{ matrix.forge }}
          CI_MODS: "quarryplus"
      - id: check-test-started
        run: |
          [ -f test_started.txt ]
      - id: check-error
        run: |
          ! [ -f error-trace.txt ]
      - id: show-failure-log
        if: failure()
        run: cat error-trace.txt

  cross-check-JUnit:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # test against latest update of each major Java version, as well as specific updates of LTS versions:
        java: [ default, 11 ]
        forge: [ 1.16.4-35.1.4, 1.16.4-35.1.37, latest, default ]
    steps:
      - uses: actions/checkout@v2
        if: ${{ matrix.forge == 'latest' }}
        with:
          repository: "Kotori316/SLP-example"
      - name: Get latest version
        if: ${{ matrix.forge == 'latest' }}
        run: |
          version=$(python3 get_latest_forge.py "1.16.5-latest")
          echo "FORGE_LATEST=1.16.5-$version" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        if: ${{ matrix.java != 'default' }}
        with:
          java-version: ${{ matrix.java }}
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle16
      - name: compile
        run: |
          if [ $CI_FORGE = "latest" ]; then
            export CI_FORGE=$FORGE_LATEST
          fi
          chmod +x ./gradlew && (./gradlew clean || true)
          ( (./gradlew compileScala || ./gradlew clean) || (./gradlew compileScala || ./gradlew clean) || (sleep 10s && ./gradlew compileScala) )
        continue-on-error: true
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI_FORGE: ${{ matrix.forge }}
      - name: Test with JUnit
        run: |
          if [ $CI_FORGE = "latest" ]; then
            export CI_FORGE=$FORGE_LATEST
          fi
          chmod +x ./gradlew && ./gradlew --no-daemon test
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI_FORGE: ${{ matrix.forge }}
      - name: Upload failed test report
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: build/reports/tests/*
          name: Test-Report-${{ matrix.java }}
